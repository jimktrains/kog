Properties
	(X as Light) Section_1 -> X in [ 1,2,5,6 ]
	(X as Light) Section_2 -> X in [ 3,4,7,8 ]
	(X as Light) Row_1 -> X in [ 1,2,3,4 ]
	(X as Light) Row_2 -> X in [ 5,6,7,8 ]

Rules
	(X as Light, Y as Light) Must_be_in_same_section -> Section_1(X) xor Section_2(Y)
	(X as Light, Y as Light) Cannot_both_be_in_Row_1 -> Row_1(X) nand Row_1(Y)
	(X as Light, Y as Light) Cannot_both_be_in_Row_2 -> Row_2(X) nand Row_2(Y)

Types
	Light as Int
	Counter as Int

Setup
	( Light_1, Light_2 ) as ( Light, Light )
	( Light_1, Light_2 ) = ( 1, 5 )
	Time as Counter
	Time = 0

Program Main
	Every 10 Miliseconds
		Time += 10
		Time = Time % 6000
		if Time eq 3000
			( Light_1, Light_2 ) = ( 4, 8 )
		if Time eq 0
			( Light_1, Light_2 ) = ( 1, 5 )
	Rescue
		Must_be_in_same_section -> switch program to Conflict
		Cannot_both_be_in_Row_1 -> switch program to Conflict
		Cannot_both_be_in_Row_2 -> switch program to Conflict
		* -> switch program to Conflict

Program Conflict
	Every 500 Miliseconds
		( Light_1, Light_2 ) = 
